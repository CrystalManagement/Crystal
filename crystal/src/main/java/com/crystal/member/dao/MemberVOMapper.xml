<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.crystal.member.dao.MemberVOMapper" >
  <resultMap id="BaseResultMap" type="com.crystal.member.domain.MemberVO" >
    <id column="memberID" property="memberid" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="studentid" property="studentid" jdbcType="VARCHAR" />
    <result column="hometown" property="hometown" jdbcType="VARCHAR" />
    <result column="major" property="major" jdbcType="VARCHAR" />
    <result column="grade" property="grade" jdbcType="VARCHAR" />
    <result column="photo" property="photo" jdbcType="VARCHAR" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="position" property="position" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="department" property="department" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    memberID, name, studentid, hometown, major, grade, photo, telephone, position, birthday, 
    department
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.crystal.member.domain.MemberVOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from member
    where memberID = #{memberid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from member
    where memberID = #{memberid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.crystal.member.domain.MemberVOExample" >
    delete from member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.crystal.member.domain.MemberVO" useGeneratedKeys="true" keyProperty="id" >
    insert into member (memberID, name, studentid, 
      hometown, major, grade, 
      photo, telephone, position, 
      birthday, department)
    values (#{memberid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{studentid,jdbcType=VARCHAR}, 
      #{hometown,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}, #{grade,jdbcType=VARCHAR}, 
      #{photo,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=DATE}, #{department,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.crystal.member.domain.MemberVO" useGeneratedKeys="true" keyProperty="id" >
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="memberid != null" >
        memberID,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="studentid != null" >
        studentid,
      </if>
      <if test="hometown != null" >
        hometown,
      </if>
      <if test="major != null" >
        major,
      </if>
      <if test="grade != null" >
        grade,
      </if>
      <if test="photo != null" >
        photo,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="position != null" >
        position,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="department != null" >
        department,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="memberid != null" >
        #{memberid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="studentid != null" >
        #{studentid,jdbcType=VARCHAR},
      </if>
      <if test="hometown != null" >
        #{hometown,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="photo != null" >
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.crystal.member.domain.MemberVOExample" resultType="java.lang.Integer" >
    select count(*) from member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update member
    <set >
      <if test="record.memberid != null" >
        memberID = #{record.memberid,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.studentid != null" >
        studentid = #{record.studentid,jdbcType=VARCHAR},
      </if>
      <if test="record.hometown != null" >
        hometown = #{record.hometown,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null" >
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null" >
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.photo != null" >
        photo = #{record.photo,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null" >
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null" >
        position = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.department != null" >
        department = #{record.department,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update member
    set memberID = #{record.memberid,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      studentid = #{record.studentid,jdbcType=VARCHAR},
      hometown = #{record.hometown,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=VARCHAR},
      photo = #{record.photo,jdbcType=VARCHAR},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      position = #{record.position,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=DATE},
      department = #{record.department,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.crystal.member.domain.MemberVO" >
    update member
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="studentid != null" >
        studentid = #{studentid,jdbcType=VARCHAR},
      </if>
      <if test="hometown != null" >
        hometown = #{hometown,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="photo != null" >
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="department != null" >
        department = #{department,jdbcType=VARCHAR},
      </if>
    </set>
    where memberID = #{memberid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crystal.member.domain.MemberVO" >
    update member
    set name = #{name,jdbcType=VARCHAR},
      studentid = #{studentid,jdbcType=VARCHAR},
      hometown = #{hometown,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      department = #{department,jdbcType=VARCHAR}
    where memberID = #{memberid,jdbcType=INTEGER}
  </update>
</mapper>